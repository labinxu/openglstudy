.PHONY:all clean


MKDIR = mkdir
RM = rm
RMFLAGS = -rf
CC = g++
CCFLAGS = -std=c++11
AR = ar
ARFLAGS = crs
DIR_OBJS = objs

DIR_EXES = $(ROOT)/build/exes
DIR_DEPS = deps
DIR_LIBS = $(ROOT)/build/libs
DIRS = $(DIR_DEPS) $(DIR_OBJS) $(DIR_EXES) $(DIR_LIBS)
RMS = $(DIR_OBJS) $(DIR_DEPS)


ifneq ($(EXE), "")
EXE := $(addprefix $(DIR_EXES)/, $(EXE))
RMS += $(EXE)
endif

ifneq ($(LIB), "")
LIB := $(addprefix $(DIR_LIBS)/, $(LIB))
RMS += $(LIB)
endif

SRCS = $(wildcard *.cpp)
OBJS = $(SRCS:.cpp=.o)
OBJS := $(addprefix $(DIR_OBJS)/,$(OBJS))
DEPS = $(SRCS:.cpp=.dep)
DEPS := $(addprefix $(DIR_DEPS)/, $(DEPS))


ifneq ($(EXE), "")
all:$(EXE)
endif
ifneq ($(LIB), "")
all:$(LIB)
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(DEPS)
endif


$(DIRS):
	$(MKDIR) $@

$(EXE):$(DIR_EXES) $(OBJS)
	$(CC) $(LIBSDIR) -o $@ $(filter %.o, $^) $(LIBS)

$(LIB):$(DIR_LIBS) $(OBJS)
	$(AR) $(ARFLAGS) $@ $(filter %.o, $^)

$(DIR_OBJS)/%.o:$(DIR_OBJS) %.cpp
	$(CC) -o $@ -c $(filter %.cpp, $^) $(CCFLAGS) 
$(DIR_DEPS)/%.dep:$(DIR_DEPS) %.cpp
	@set -e;\
	echo "Making $@ ...";\
	$(RM) $(RMFLAGS) $@.tmp;\
	$(CC) -E -MM $(filter %.cpp, $^) > $@.tmp;\
	sed 's,\(.*\)\.o[ :]*,objs/\1.o $@: ,g' < $@.tmp > $@;\
	$(RM) $(RMFLAGS) $@.tmp
clean:
	$(RM) $(RMFLAGS) $(RMS)
list:
	echo $(DIR_OBJS)
